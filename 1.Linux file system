 1 Linux File System
-Linux File System  generally is a layer that is under the operating system that handles
 the positioning of your data on the storage.


*Directories and its types-
     -/bin - In this,it commands & runs applications and programs.
     -/boot - In this ,boot files present which helps to start device.
     -/media - In this , external storage will be mounted when plugged in.
     -/mnt - In this , we maunally mount storage.
     -/proc - In this, storing the information of CPU & Kernel process is done by virtually.
     -/root - Home directory of the Administrator .
     -/usr - unique system resources 
     -/var - used to store data that changes frequently. 
     -/dev - device files are stored in this directory.
     -/etc - In this , system configuration is present.
     -/home - In this, user's personal directories present.
     -/lib -  In this,libraries for the commands are provided.
     

*Basic commands

mkdir :	Make a directory at a particular path
rmdir - used to remove an empty directory  
touch file : to create file
~     : Indicates the home directory.
echo  :It inserts text in the given file
clear : Clears information on the display screen to provide a blank slate.
pwd   :	Print your working directory
ls    :	List the contents of a particular path
cd    :	 Move to a particular path or change directory
cd ~  :  Return to home directory.
cd / :to shift to root user 
ls -l :  shows all the links with the link column shows number of links.
cat   : To display content of the given file
cp -r : To copy all files recursively.
mv    :To rename the file 
rm    :To remove file
uname :To check current version of Linux.
head  :To get info about top files instead of all files.
tail  :To get info about last files instead of all files.
ping  :To check  working of network
vi    :Text editor ,press i to insert then press ESC to return & wq to save and exit .


* Links:
-Creating links is a kind of shortcuts to access a file.
-There are two types of links :
1.	Soft Link or Symbolic links
2.	Hard Links
-Hard links always refer to the source, even if moved or removed. 
-If we create a hard link to the file and then delete the file, we can still access the file using hard link. 
-But if we create a soft link of the file and then delete the file, we canâ€™t access the file.
-Simply soft links work as a shortcut while hard link increases reference count of a location .
-	Command to create a hard link is: 
 
	$ ln  [original filename] [link name] 
	
1. Hard Links 

-Command to create a hardlink
                    $ ln -s file.txt hardlink.txt
-	ls -l command is to show all the links with the link column shows number of links.
-	Each hard linked file is assigned the same Inode value as the original, therefore they reference the same physical file location. 
-	We cannot create a hard link for a directory to avoid recursive loops.
-	If original file is removed then the link will still show the content of the file.
-	The size of any of the hard link file is same as the original file.
-	If we change the content in any of the hard links then size of all hard link files are updated.
-	The disadvantage of hard links is it cannot be created for special files or directories .

	 
2. Soft Links 
 - Command to create a soft link:
                    $ ln -s file.txt softlink.txt
-	A soft link is similar to the file shortcut feature which is used in Windows Operating systems. 
-	Each soft linked file contains a separate Inode value that points to the original file. 
-	As similar to hard links, any changes to the data in either file is reflected in the other.
-	ls -l command shows all links with first column value l and the link points to original file.
	Soft Link contains the path for original file and not the contents.
-	A soft link can link to a directory.
-	If we change the name of the original file then all the soft links for that file become dangling.
